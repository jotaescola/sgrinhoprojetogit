let barco;
let lixos = [];
let pontuacao = 0;
let vidas = 3;
let jogoAtivo = true;

function setup() {
  createCanvas(600, 400);
  barco = new Barco();
  for (let i = 0; i < 5; i++) {
    lixos.push(new Lixo());
  }
}

function draw() {
  background('#DDF5FF'); 
  fill('#248600');
  rect(0, height / 2, width, height / 2);

  if (jogoAtivo) {
    barco.mostrar();
    barco.mover();

    for (let lixo of lixos) {
      lixo.mostrar();
      lixo.mover();

      if (lixo.pego(barco)) {
        pontuacao++;
        lixo.reiniciar();
      } else if (lixo.y > height) {
        vidas--;
        lixo.reiniciar();
        if (vidas <= 0) {
          jogoAtivo = false;
        }
      }
    }

    fill(0);
    textSize(18);
    text('PontuaÃ§Ã£o: ' + pontuacao, 10, 20);
    text('Vidas: ' + vidas, 10, 40);

    if (pontuacao >= 15) {
      jogoAtivo = false;
      fill(0, 200, 0);  //verde
      textSize(48);     //maior  
      text('VocÃª venceu!', width / 2 - 130, height / 2);
    }
  } else {
    fill(200, 0, 0);
    textSize(32);
    if (vidas <= 0) {
      text('VocÃª perdeu!', width / 2 - 100, height / 2);
    } else if (pontuacao >= 15) {
      text('VocÃª venceu!', width / 2 - 100, height / 2);
    }
    textSize(20);
    text('Pressione Ã‡ para continuar', width / 2 - 100, height / 2 + 30);
  }
}

function keyPressed() {
  if (key === 'a' || key === 'A') {
    barco.direcao = -1;
  } else if (key === 'd' || key === 'D') {
    barco.direcao = 1;
  }

  if (key === 'Ã§') {
    pontuacao = 0;
    vidas = 3;
    jogoAtivo = true;
  }
}

function keyReleased() {
  if (key === 'a' || key === 'A' || key === 'd' || key === 'D') {
    barco.direcao = 0;
  }
}

class Barco {
  constructor() {
    this.x = width / 2;
    this.y = height / 2 - 5;
    this.direcao = 0;
  }

  mostrar() {
    textSize(40);
    text('ðŸš—', this.x, this.y);
  }

  mover() {
    this.x += this.direcao * 9;
    this.x = constrain(this.x, 0, width - 40);
  }
}

class Lixo {
  constructor() {
    this.reiniciar();
  }

  reiniciar() {
    this.x = random(width);
    this.y = random(-200, -20);
    this.velocidade = random(1, 2);
    this.emoji = random(['ðŸ–¥', 'ðŸ“±', 'ðŸ’»', 'ðŸ–¨']);
  }

  mostrar() {
    textSize(28);
    text(this.emoji, this.x, this.y);
  }

  mover() {
    this.y += this.velocidade;
  }

  pego(barco) {
    return (
      this.y > barco.y - 40 &&
      this.y < barco.y + 40 &&
      this.x > barco.x - 40 &&
      this.x < barco.x +Â 40
Â Â Â Â );
Â Â }
}
